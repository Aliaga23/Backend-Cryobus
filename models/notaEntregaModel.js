const { pool } = require('../db');

const getNotasEntrega = async () => {
  const [rows] = await pool.query('SELECT * FROM NOTAENTREGA');
  return rows;
};

const getNotaEntregaById = async (id) => {
  const [rows] = await pool.query('SELECT * FROM NOTAENTREGA WHERE NRO = ?', [id]);
  return rows[0];
};

const createNotaEntrega = async (notaEntrega) => {
  const { FECHARECEPCION, HORARECEPCION, FECHAENTREGA, HORAENTREGA, PRECIOESTIMADO, CODIGOCLIENTEENVIA, CODIGOCLIENTERECIBE, IDUSUARIOENVIA, IDUSUARIORECIBE, IDTIPOENVIO, IDESTADOENTREGA, NROREEMBOLSO, CODIGOPAQUETE, NRONOTATRASLADO, IDPLANDERUTA } = notaEntrega;
  const result = await pool.query(
    'INSERT INTO NOTAENTREGA (FECHARECEPCION, HORARECEPCION, FECHAENTREGA, HORAENTREGA, PRECIOESTIMADO, CODIGOCLIENTEENVIA, CODIGOCLIENTERECIBE, IDUSUARIOENVIA, IDUSUARIORECIBE, IDTIPOENVIO, IDESTADOENTREGA, NROREEMBOLSO, CODIGOPAQUETE, NRONOTATRASLADO, IDPLANDERUTA) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)',
    [FECHARECEPCION, HORARECEPCION, FECHAENTREGA, HORAENTREGA, PRECIOESTIMADO, CODIGOCLIENTEENVIA, CODIGOCLIENTERECIBE, IDUSUARIOENVIA, IDUSUARIORECIBE, IDTIPOENVIO, IDESTADOENTREGA, NROREEMBOLSO, CODIGOPAQUETE, NRONOTATRASLADO, IDPLANDERUTA]
  );
  return result[0];
};

const updateNotaEntrega = async (id, notaEntrega) => {
  const { FECHARECEPCION, HORARECEPCION, FECHAENTREGA, HORAENTREGA, PRECIOESTIMADO, CODIGOCLIENTEENVIA, CODIGOCLIENTERECIBE, IDUSUARIOENVIA, IDUSUARIORECIBE, IDTIPOENVIO, IDESTADOENTREGA, NROREEMBOLSO, CODIGOPAQUETE, NRONOTATRASLADO, IDPLANDERUTA } = notaEntrega;
  const result = await pool.query(
    'UPDATE NOTAENTREGA SET FECHARECEPCION = ?, HORARECEPCION = ?, FECHAENTREGA = ?, HORAENTREGA = ?, PRECIOESTIMADO = ?, CODIGOCLIENTEENVIA = ?, CODIGOCLIENTERECIBE = ?, IDUSUARIOENVIA = ?, IDUSUARIORECIBE = ?, IDTIPOENVIO = ?, IDESTADOENTREGA = ?, NROREEMBOLSO = ?, CODIGOPAQUETE = ?, NRONOTATRASLADO = ?, IDPLANDERUTA = ? WHERE NRO = ?',
    [FECHARECEPCION, HORARECEPCION, FECHAENTREGA, HORAENTREGA, PRECIOESTIMADO, CODIGOCLIENTEENVIA, CODIGOCLIENTERECIBE, IDUSUARIOENVIA, IDUSUARIORECIBE, IDTIPOENVIO, IDESTADOENTREGA, NROREEMBOLSO, CODIGOPAQUETE, NRONOTATRASLADO, IDPLANDERUTA, id]
  );
  return result[0];
};

const deleteNotaEntrega = async (id) => {
  const result = await pool.query('DELETE FROM NOTAENTREGA WHERE NRO = ?', [id]);
  return result[0];
};

module.exports = {
  getNotasEntrega,
  getNotaEntregaById,
  createNotaEntrega,
  updateNotaEntrega,
  deleteNotaEntrega,
};
